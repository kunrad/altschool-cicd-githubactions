name: Multi-Step Docker Build

on: 
    push: 
        branches: [ feature/* ]
    workflow_dispatch:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build: 
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            
            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Build Docker Image
              uses: docker/build-push-action@v2
              with: 
                context: .
                file: ./Dockerfile
                platforms: linux/amd64,linux/arm64
                push: false
                load: true
                cache-from: type=gha
                cache-to: type=gha,mode=max
                tags: ${{ env.IMAGE_NAME }}:test

            - name: Save Docker Image
              run: docker save ${{ env.IMAGE_NAME }}:test > image.tar
            
            - name: Upload Docker Image to Registry
              uses: actions/upload-artifact@v2
              with: 
                name: docker-image
                path: image.tar

    test: 
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Download Artifact
              uses: actions/download-artifact@v2
              with: 
                name: docker-image

            - name: Load Docker Image
              run: docker load < image.tar

            - name: Run test
              run: docker run --rm ${{ env.IMAGE_NAME }}:test echo "Test passed"

    Push:
        needs: test
        runs-on: ubuntu-latest
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        permissions:
            contents: read
            packages: write
        steps:
            - name: Download Artifact
              uses: actions/download-artifact@v2
              with: 
                name: docker-image
            - name: Load Docker Image
              run: docker load < image.tar

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v1
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract Metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v3
              with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            - name: Push Docker Image to Registry
              run: |
               docker tag ${{ env.IMAGE_NAME }}:test ${{ steps.meta.outputs.tags }}
               docker push ${{ steps.meta.outputs.tags }}